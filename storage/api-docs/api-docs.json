{
    "openapi": "3.0.0",
    "info": {
        "title": "Public API Example Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "roger.medico@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost/public-api/public/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/person": {
            "get": {
                "tags": [
                    "People"
                ],
                "summary": "Get list of people",
                "description": "Returns list of people",
                "operationId": "getPersonList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "People"
                ],
                "summary": "Store new person",
                "description": "Returns the person created data",
                "operationId": "storePerson",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePersonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The name field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/person/all": {
            "get": {
                "tags": [
                    "People"
                ],
                "summary": "Get list of people with all information",
                "description": "Returns list of people with information of all of their relations",
                "operationId": "getPeopleWithAllInformation",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleWithPetsResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/person/all/{id}": {
            "get": {
                "tags": [
                    "People"
                ],
                "summary": "Get person with all information",
                "description": "Returns person with information of all of their relations",
                "operationId": "getPersonWithAllInformation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Person id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonWithPetsResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Object not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/person/{id}": {
            "get": {
                "tags": [
                    "People"
                ],
                "summary": "Get person information",
                "description": "Returns person data",
                "operationId": "getPersonById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Person id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Object not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "People"
                ],
                "summary": "Update existing person",
                "description": "Returns updated person data",
                "operationId": "updatePerson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Person id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePersonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The name must not be greater than 255 characters."
                                            }
                                        },
                                        "birthday": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The birthday is not a valid date."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Object not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "People"
                ],
                "summary": "Delete existing person",
                "description": "Deletes a person record and returns no content",
                "operationId": "deletePerson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Person id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Object not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/pet": {
            "get": {
                "tags": [
                    "Pets"
                ],
                "summary": "Get list of pets",
                "description": "Returns list of pets",
                "operationId": "getPetList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetsResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Pets"
                ],
                "summary": "Store new pet",
                "description": "Returns the pet created data",
                "operationId": "storePet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The name field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/pet/all": {
            "get": {
                "tags": [
                    "Pets"
                ],
                "summary": "Get list of pets with all information",
                "description": "Returns list of pets with information of all of their relations",
                "operationId": "getPetsWithAllInformation",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetsWithRelationsPersonsResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/pet/all/{id}": {
            "get": {
                "tags": [
                    "Pets"
                ],
                "summary": "Get pet with all information",
                "description": "Returns pet with information of all of their relations",
                "operationId": "getPetWithAllInformation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Pet id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetWithRelationsPersonsResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Object not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/pet/{id}": {
            "get": {
                "tags": [
                    "Pets"
                ],
                "summary": "Get pet information",
                "description": "Returns pet data",
                "operationId": "getPetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "pet id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PetResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Object not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Pets"
                ],
                "summary": "Update existing pet",
                "description": "Returns updated pet data",
                "operationId": "updatePet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Pet id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The name must not be greater than 255 characters."
                                            }
                                        },
                                        "pet_type_id": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The selected pet type id is invalid."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Object not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Pets"
                ],
                "summary": "Delete existing pet",
                "description": "Deletes a pet record and returns no content",
                "operationId": "deletePet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Pet id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Object not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Person": {
                "title": "Person",
                "description": "Person model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "name",
                        "description": "name",
                        "type": "string",
                        "format": "string",
                        "example": "Roger Medico"
                    },
                    "birthday": {
                        "title": "birthday",
                        "description": "birthday",
                        "type": "string",
                        "format": "date",
                        "example": "1989-11-17"
                    },
                    "token_id": {
                        "title": "token_id",
                        "description": "token id identifying the author of the request",
                        "type": "integer",
                        "format": "int64",
                        "example": "10"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "when record was created",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-12-10T10:31:23.000000Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "when record was updated",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-12-10T10:31:23.000000Z"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Person"
                }
            },
            "PersonWithPets": {
                "title": "PersonWithPets",
                "description": "Person model with pets",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "name",
                        "description": "name",
                        "type": "string",
                        "format": "string",
                        "example": "Roger Medico"
                    },
                    "birthday": {
                        "title": "birthday",
                        "description": "birthday",
                        "type": "string",
                        "format": "date",
                        "example": "1989-11-17"
                    },
                    "token_id": {
                        "title": "token_id",
                        "description": "token id identifying the author of the request",
                        "type": "integer",
                        "format": "int64",
                        "example": "10"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "when record was created",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-12-10T10:31:23.000000Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "when record was updated",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-12-10T10:31:23.000000Z"
                    },
                    "pets": {
                        "title": "pets",
                        "description": "pets belonging to the person",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PetWithRelations"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Person with pets"
                }
            },
            "Pet": {
                "title": "Pet",
                "description": "Pet model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "name",
                        "description": "name",
                        "type": "string",
                        "format": "string",
                        "example": "Yuno"
                    },
                    "pet_type_id": {
                        "title": "pet_type_id",
                        "description": "FK to pet type",
                        "type": "string",
                        "format": "int64",
                        "example": "1"
                    },
                    "token_id": {
                        "title": "token_id",
                        "description": "token id identifying the author of the request",
                        "type": "integer",
                        "format": "int64",
                        "example": "10"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "when record was created",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-12-10T10:31:23.000000Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "when record was updated",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-12-10T10:31:23.000000Z"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Pet"
                }
            },
            "PetType": {
                "title": "PetType",
                "description": "Pet type model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "name",
                        "description": "name",
                        "type": "string",
                        "format": "string",
                        "example": "cat"
                    },
                    "token_id": {
                        "title": "token_id",
                        "description": "token id identifying the author of the request",
                        "type": "integer",
                        "format": "int64",
                        "example": "10"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "when record was created",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-12-10T10:31:23.000000Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "when record was updated",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-12-10T10:31:23.000000Z"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PetType"
                }
            },
            "PetWithRelations": {
                "title": "PetWithRelations",
                "description": "Pet with relations model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "name",
                        "description": "name",
                        "type": "string",
                        "format": "string",
                        "example": "Yuno"
                    },
                    "token_id": {
                        "title": "token_id",
                        "description": "token id identifying the author of the request",
                        "type": "integer",
                        "format": "int64",
                        "example": "10"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "when record was created",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-12-10T10:31:23.000000Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "when record was updated",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-12-10T10:31:23.000000Z"
                    },
                    "pet_type": {
                        "$ref": "#/components/schemas/PetType"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Pet with relations"
                }
            },
            "PetWithRelationsPersons": {
                "title": "PetWithRelationsPersons",
                "description": "Pet with relations and owners model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "name",
                        "description": "name",
                        "type": "string",
                        "format": "string",
                        "example": "Yuno"
                    },
                    "token_id": {
                        "title": "token_id",
                        "description": "token id identifying the author of the request",
                        "type": "integer",
                        "format": "int64",
                        "example": "10"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "when record was created",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-12-10T10:31:23.000000Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "when record was updated",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-12-10T10:31:23.000000Z"
                    },
                    "pet_type": {
                        "$ref": "#/components/schemas/PetType"
                    },
                    "persons": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Person"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Pet with relations and owners"
                }
            },
            "StorePersonRequest": {
                "title": "StorePersonRequest",
                "description": "Store Person request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new person",
                        "type": "string",
                        "example": "Roger"
                    },
                    "birthday": {
                        "title": "birthday",
                        "description": "Birthday of the new person",
                        "type": "string",
                        "format": "date",
                        "example": "1990-5-30"
                    }
                },
                "type": "object"
            },
            "StorePetRequest": {
                "title": "StorePetRequest",
                "description": "Store Pet request body data",
                "required": [
                    "name",
                    "pet_type_id"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new Pet",
                        "type": "string",
                        "example": "Yuno"
                    },
                    "pet_type_id": {
                        "title": "pet_type_id",
                        "description": "FK to the pet type table",
                        "type": "string",
                        "format": "date",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "UpdatePersonRequest": {
                "title": "UpdatePersonRequest",
                "description": "Update Person request body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "New name for the updated person",
                        "type": "string",
                        "example": "Roger"
                    },
                    "birthday": {
                        "title": "birthday",
                        "description": "New birthday for the updated person",
                        "type": "string",
                        "format": "date",
                        "example": "1990-5-30"
                    }
                },
                "type": "object"
            },
            "UpdatePetRequest": {
                "title": "UpdatePetRequest",
                "description": "Update Pet request body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "New name for the updated Pet",
                        "type": "string",
                        "example": "Yuno"
                    },
                    "birthday": {
                        "title": "pet_type_id",
                        "description": "New FK to the pet id for the updated Pet",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "PeopleResource": {
                "title": "PeopleResource",
                "description": "People resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Person"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PeopleResource"
                }
            },
            "PeopleWithPetsResource": {
                "title": "PeopleWithPetsResource",
                "description": "People resource with pets",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PersonWithPets"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PeopleWithPtsResource"
                }
            },
            "PersonResource": {
                "title": "PersonResource",
                "description": "Person resource",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Person"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PersonResource"
                }
            },
            "PersonWithPetsResource": {
                "title": "PersonWithPetsResource",
                "description": "Person resource with pets",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/PersonWithPets"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PersonWithPetsResource"
                }
            },
            "PetResource": {
                "title": "PetsResource",
                "description": "Pets resource",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Pet"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PetsResource"
                }
            },
            "PetWithRelationsPersonsResource": {
                "title": "PetWithRelationsPersonsResource",
                "description": "Pet resource with relations and owners",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/PetWithRelationsPersons"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PetWithRelationsPersonsResource"
                }
            },
            "PetsResource": {
                "title": "PetsResource",
                "description": "Pets resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Pet"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PetsResource"
                }
            },
            "PetsWithRelationsPersonsResource": {
                "title": "PetsWithRelationsPersonsResource",
                "description": "Pets resource with relations and owners",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PetWithRelationsPersons"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PetsWithRelationsPersonsResource"
                }
            }
        },
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "People",
            "description": "API Endpoints of People"
        },
        {
            "name": "Pets",
            "description": "API Endpoints of Pets"
        }
    ],
    "security": [
        []
    ]
}